---

# Basic Setup for Docker Buildnodes (CentOS)
- name: install required packages
  yum:
    name: "{{ docker_required_packages }}"
    state: present

- name: gather the package facts
  package_facts:
    manager: auto

- name: check if docker is installed and it so, get the docker version
  shell: "docker -v | cut -d ' ' -f 3 | cut -d ',' -f 1"
  when:
  - "'docker' in ansible_facts.packages"
  register: installed_docker_version

- name: Create temporary installation script directory
  tempfile:
    state: directory
    suffix: docker_installation
  register: docker_installation_dir

- name: install Docker service
  block:
  - name: set docker installation script fact
    set_fact:
      docker_installation_script: "{{ docker_version }}.sh"

  - name: set docker installation script path fact
    set_fact: 
      docker_installation_script_full_path: "{{ docker_installation_dir.path }}/{{ docker_installation_script }}"

  - name: get Rancher's Docker installation script
    get_url:
      url: "https://releases.rancher.com/install-docker/{{ docker_installation_script }}"
      dest: "{{ docker_installation_script_full_path }}"
      mode: '0755'

  - name: execute the Docker installation script
    shell: "bash {{ docker_installation_script_full_path }}"

  - name: remove the Docker installation script
    file: 
      path: "{{ docker_installation_script_full_path }}"
      state: absent
  when: (installed_docker_version is skipped or not docker_version in installed_docker_version.stdout)
  always:
  - name: Cleanup docker_installation_dir
    file:
      path: "{{ docker_installation_dir.path }}"
      state: absent
    when: docker_installation_dir.path is defined


- name: Enable IP Forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: enable and start docker
  systemd:
    name: docker
    daemon-reload: yes
    enabled: yes
    state: started

- name: setup a cronjob for docker cleanup
  cron:
    name: docker cleanup
    minute: "00"
    hour: "21"
    user: root
    job: 'docker system prune -f --filter "until=2h" -a >/dev/null 2>&1'
    cron_file: docker_cleanup

- name: setup a cronjob for docker volumes cleanup
  cron:
    name: docker volumes cleanup
    minute: "15"
    hour: "21"
    user: root
    job: 'for vol in $(docker volume ls -q -f dangling=true); do docker volume rm $vol >/dev/null 2>&1; done'
    cron_file: docker_cleanup

- name: adding existing user '{{ ansible_user }}' to group docker
  user:
    name: '{{ ansible_user }}'
    groups: docker
    append: yes

